<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Paytools.Common</name>
    </assembly>
    <members>
        <member name="T:Paytools.Common.Diagnostics.InconsistentDataException">
            <summary>
            Exception that is thrown when inconsistent data is detected, for example, when a tax code regime is invalid for the
            tax year in question.
            </summary>
        </member>
        <member name="M:Paytools.Common.Diagnostics.InconsistentDataException.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Paytools.Common.Diagnostics.InconsistentDataException"/> class.
            </summary>
            <param name="message">Human-readable text providing further details on the exception.</param>
        </member>
        <member name="T:Paytools.Common.Diagnostics.InvalidReferenceDataException">
            <summary>
            Exception that is thrown when invalid reference data is provided.
            </summary>
        </member>
        <member name="M:Paytools.Common.Diagnostics.InvalidReferenceDataException.#ctor(System.String)">
            <summary>
            Initialises a new instance of the <see cref="T:Paytools.Common.Diagnostics.InvalidReferenceDataException"/> class.
            </summary>
            <param name="message">Human-readable text providing further details on the exception.</param>
        </member>
        <member name="T:Paytools.Common.Extensions.DateOnlyExtensions">
            <summary>
            Extension methods for instances of <see cref="T:System.DateOnly"/>.
            </summary>
        </member>
        <member name="M:Paytools.Common.Extensions.DateOnlyExtensions.ToMiddayUtcDateTime(System.DateOnly)">
            <summary>
            Provides an equivalent <see cref="T:System.DateTime"/> to the supplied <see cref="T:System.DateOnly"/> with the
            time portion set to midday (12:00:00) UTC.  This is used to minimise the possibility of dates being misinterpreted
            as the next or previous day due to the use of non-UTC timezones.
            </summary>
            <param name="date">DateOnly to convert to DateTime.</param>
            <returns>DateTime instance with the same date as the supplied DateOnly and time portion set to 12:00:00 UTC.</returns>
        </member>
        <member name="M:Paytools.Common.Extensions.DateOnlyExtensions.ToTaxYearEnding(System.DateOnly)">
            <summary>
            Gets the <see cref="T:Paytools.Common.Model.TaxYearEnding"/> value for the supplied <see cref="T:System.DateOnly"/>.
            </summary>
            <param name="date"><see cref="T:System.DateOnly"/> to get the TaxYearEnding for.</param>
            <returns>Relevant <see cref="T:Paytools.Common.Model.TaxYearEnding"/> for the supplied date.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the supplied date is outside the supported
            set of dates for this library.</exception>
        </member>
        <member name="T:Paytools.Common.Extensions.DateTimeExtensions">
            <summary>
            Extension methods for instances of <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="M:Paytools.Common.Extensions.DateTimeExtensions.MiddayUtc(System.DateTime)">
            <summary>
            Gets an instance of DateTime from the supplied DateTime but with the time portion set to midday (12:00:00) UTC.
            </summary>
            <param name="dateTime">Source DateTime instance.</param>
            <returns>DateTime with the same date but time portion set to 12:00:00 UTC.</returns>
        </member>
        <member name="T:Paytools.Common.Extensions.IEnumerableExtensions">
            <summary>
            Extension methods for instances of <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Paytools.Common.Extensions.IEnumerableExtensions.WithIndex``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Provides a new IEnumerable of tuples, where the first element of the tuple is the original item and the second
            element is the numeric index of the item, zero-based.
            </summary>
            <typeparam name="T">Type of item in original IEnumerable.</typeparam>
            <param name="source">Source IEnumerable.</param>
            <returns>New IEnumerable of tuples as described above.</returns>
        </member>
        <member name="T:Paytools.Common.Model.CountriesForTaxPurposes">
            <summary>
            Represents one or more countries within the United Kingdom for tax purposes.  For example,
            Scotland has had its own thresholds and rates of income tax since 2016.  Note that this enum is marked with
            the [Flags} attribute as it is possible to combine countries for situations where the same set of tax
            parameters applies to more than one country, e.g. England and Northern Ireland.
            </summary>
        </member>
        <member name="F:Paytools.Common.Model.CountriesForTaxPurposes.England">
            <summary>England</summary>
        </member>
        <member name="F:Paytools.Common.Model.CountriesForTaxPurposes.NorthernIreland">
            <summary>Northern Ireland</summary>
        </member>
        <member name="F:Paytools.Common.Model.CountriesForTaxPurposes.Scotland">
            <summary>Scotland</summary>
        </member>
        <member name="F:Paytools.Common.Model.CountriesForTaxPurposes.Wales">
            <summary>Wales</summary>
        </member>
        <member name="T:Paytools.Common.Model.CountriesForTaxPurposesConverter">
            <summary>
            Converter that translates between the string format of countries based on ISO-3166 and <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> enum values.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.CountriesForTaxPurposesConverter.ToString(Paytools.Common.Model.CountriesForTaxPurposes)">
            <summary>
            Gets the ISO-3166 sub-entity for the supplied country or countries enum value.
            </summary>
            <param name="countries">Instance of <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> specifying one or more countries with the UK.</param>
            <returns>Space separated ISO-3166 countries list, e.g., "GB-ENG GB-NIR".</returns>
        </member>
        <member name="M:Paytools.Common.Model.CountriesForTaxPurposesConverter.ToEnum(System.String)">
            <summary>
            Gets the <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> enum value for the supplied country or space separated list of
            ISO-3166 countries, e.g., "GB-ENG GB-NIR".
            </summary>
            <param name="iso3166Countries">Space separated list of ISO-3166 countries.</param>
            <returns>Equivalent CountriesForTaxPurposes enum value.</returns>
            <exception cref="T:System.ArgumentException">Thrown if an invalid country value is supplied.</exception>
        </member>
        <member name="T:Paytools.Common.Model.Gender">
            <summary>
            Enum representing a person's gender.  Note that HMRC only recognises the genders male and female for PAYE purposes, hence
            only two options (plus unknown) are provided.
            </summary>
        </member>
        <member name="F:Paytools.Common.Model.Gender.Unknown">
            <summary>Not known/undefined</summary>
        </member>
        <member name="F:Paytools.Common.Model.Gender.Male">
            <summary>Male</summary>
        </member>
        <member name="F:Paytools.Common.Model.Gender.Female">
            <summary>Female</summary>
        </member>
        <member name="T:Paytools.Common.Model.HmrcAccountsOfficeReference">
            <summary>
            Represents an HMRC Accounts Office Reference, as defined at
            <see href="https://design.tax.service.gov.uk/hmrc-design-patterns/accounts-office-reference/"/>,
            which is formatted as follows:
            <list type="bullet">
                <item><description>3 numbers</description></item>
                <item><description>The letter 'P'</description></item>
                <item><description>8 numbers, or 7 numbers and the letter ‘X’</description></item>
            </list>
             (from )
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.HmrcAccountsOfficeReference.op_Implicit(Paytools.Common.Model.HmrcAccountsOfficeReference)~System.String">
            <summary>
            Operator for casting implicitly from a <see cref="T:Paytools.Common.Model.HmrcAccountsOfficeReference"/> instance to its string equivalent.
            </summary>
            <param name="value">An instance of HmrcAccountsOfficeReference.</param>
        </member>
        <member name="M:Paytools.Common.Model.HmrcAccountsOfficeReference.#ctor(System.String)">
            <summary>
            Initialises a new instance of <see cref="T:Paytools.Common.Model.HmrcAccountsOfficeReference"/>.
            </summary>
            <param name="accountsOfficeReference">String value containing the HMRC Accounts Office Reference.</param>
            <exception cref="T:System.ArgumentException">Thrown if the supplied string value does not match the required pattern
            for valid HMRC Accounts Office Reference values.</exception>
        </member>
        <member name="M:Paytools.Common.Model.HmrcAccountsOfficeReference.IsValid(System.String)">
            <summary>
            Verifies whether the supplied string could be a valid HRMC Accounts Office Reference.
            </summary>
            <param name="value">String value to check.</param>
            <returns>True if the supplied value could be a valid HMRC Accounts Office Reference; false otherwise.</returns>
            <remarks>Although this method confirms whether the string supplied <em>could</em> be a valid HRMC Accounts Office
            Reference, it does not guarantee that the supplied value is registered with HMRC against a given company.</remarks>
        </member>
        <member name="M:Paytools.Common.Model.HmrcAccountsOfficeReference.ToString">
            <summary>
            Gets the string representation of this HmrcAccountsOfficeReference.
            </summary>
            <returns>The value of this <see cref="T:Paytools.Common.Model.HmrcAccountsOfficeReference"/> as a string.</returns>
        </member>
        <member name="T:Paytools.Common.Model.HmrcPayeReference">
            <summary>
            Represents an HMRC PAYE Reference, as defined at
            <see href="https://design.tax.service.gov.uk/hmrc-design-patterns/employer-paye-reference/"/>,
            which is formatted as follows:
            <list type="bullet">
                <item><description>3 numbers</description></item>
                <item><description>a forward slash ('/')</description></item>
                <item><description>between 1 and 10 characters, which can be letters and numbers</description></item>
            </list>
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.HmrcPayeReference.HmrcOfficeNumber">
            <summary>
            Gets or sets the HMRC office number portion of the full PAYE Reference.  Always 3 digits.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.HmrcPayeReference.EmployerPayeReference">
            <summary>
            Gets or sets the PAYE reference portion of the full HMRC PAYE Reference, i.e., the portion on the right hand of '/'.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.HmrcPayeReference.#ctor(System.Int32,System.String)">
            <summary>
            Initialises a new instance of <see cref="T:Paytools.Common.Model.HmrcPayeReference"/> using the Office number and Employer PAYE reference
            elements.
            </summary>
            <param name="hmrcOfficeNumber">HMRC Office Number (always 3 digits).</param>
            <param name="employerPayeReference">Employer PAYE reference (the part after the '/').</param>
        </member>
        <member name="M:Paytools.Common.Model.HmrcPayeReference.op_Implicit(Paytools.Common.Model.HmrcPayeReference)~System.String">
            <summary>
            Operator for casting implicitly from a <see cref="T:Paytools.Common.Model.HmrcPayeReference"/> instance to its string representation.
            </summary>
            <param name="value">An instance of HmrcPayeReference.</param>
        </member>
        <member name="M:Paytools.Common.Model.HmrcPayeReference.TryParse(System.String,System.Nullable{Paytools.Common.Model.HmrcPayeReference}@)">
            <summary>
            Attempts to parse the supplied string into an <see cref="T:Paytools.Common.Model.HmrcPayeReference"/> object.
            </summary>
            <param name="input">String value containing candidate full HMRC PAYE Reference.  Lower case characters are converted to
            upper case.</param>
            <param name="payeReference">Set to a new instance of HmrcPayeReference if parse succeeds; set to object default
            otherwise.</param>
            <returns>True if the string could be parsed into a valid HMRC PAYE Reference; false otherwise.</returns>
        </member>
        <member name="M:Paytools.Common.Model.HmrcPayeReference.IsValid(System.String)">
            <summary>
            Verifies whether the supplied string could be a valid HMRC PAYE Reference.
            </summary>
            <param name="value">String value to check.</param>
            <returns>True if the supplied value could be a valid HMRC PAYE Reference; false otherwise.</returns>
            <remarks>Although this method confirms whether the string supplied <em>could</em> be a valid HMRC PAYE Reference,
            it does not guarantee that the supplied value is registered with HMRC against a given company.</remarks>
        </member>
        <member name="M:Paytools.Common.Model.HmrcPayeReference.ToString">
            <summary>
            Gets the string representation of this HmrcPayeReference.
            </summary>
            <returns>The value of this <see cref="T:Paytools.Common.Model.HmrcPayeReference"/> as a string.</returns>
        </member>
        <member name="T:Paytools.Common.Model.IEmployableIndividual">
            <summary>
            Represents an individual either in employment, about to be employed, or previously but no longer employed.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.IEmployableIndividual.NiNumber">
            <summary>
            Gets the individual's National Insurance number.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.IEmployableIndividual.DateOfBirth">
            <summary>
            Gets the individual's date of birth.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.IEmployableIndividual.Gender">
            <summary>
            Gets the individual's "official" gender as recognised by HMRC for payroll purposes.
            </summary>
        </member>
        <member name="T:Paytools.Common.Model.INamedIndividual">
            <summary>
            Represents a named individual, i.e., a (usually living) person.  This interface is provided for all the situations
            where a contact person is required, but is also the base entity for employees via <see cref="T:Paytools.Common.Model.IEmployableIndividual"/>.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.Title">
            <summary>
            Gets the individual's title, e.g., Mr, Mrs, Miss, Dr., etc.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.FirstName">
            <summary>
            Gets the individual's first (also known as "given" or "Christian") name.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.Initials">
            <summary>
            Gets a list of the individual's initials as an array.  Note that this property is only used if the individual's
            first name is not known, and its use is mutually exclusive with <see cref="P:Paytools.Common.Model.INamedIndividual.FirstName"/> and <see cref="P:Paytools.Common.Model.INamedIndividual.MiddleNames"/>.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.MiddleNames">
            <summary>
            Gets the middle names of the individual, space separated.  Note that this property is optional, as some people do
            not have middle names, or they choose not to disclose them.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.LastName">
            <summary>
            Gets the individual's last (also known as "family") name.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.HasMiddleName">
            <summary>
            Gets a value indicating whether the individual has supplied a middle name.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.INamedIndividual.InitialsAsString">
            <summary>
            Gets any initials provided as a space separated string.  Will be null if a <see cref="P:Paytools.Common.Model.INamedIndividual.FirstName"/>
            has been provided.
            </summary>
        </member>
        <member name="T:Paytools.Common.Model.NiNumber">
            <summary>
            Represents a Uk National Insurance number, also referred to as NI number or NINO.  A NINO is made up of 2 letters, 6 numbers
            and a final letter which is always A, B, C or D.  (See HMRC's National Insurance Manual, section NIM39110
            (<see href="https://www.gov.uk/hmrc-internal-manuals/national-insurance-manual/nim39110"/>.)
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.#ctor(System.String)">
            <summary>
            Initialises a new <see cref="T:Paytools.Common.Model.NiNumber"/> instance.
            </summary>
            <param name="niNumber">National insurance number as string.</param>
            <exception cref="T:System.ArgumentException">Thrown if the supplied string is not a valid NI number.</exception>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.op_Implicit(Paytools.Common.Model.NiNumber)~System.String">
            <summary>
            Operator for casting implicitly from a <see cref="T:Paytools.Common.Model.NiNumber"/> instance to its string representation.
            </summary>
            <param name="niNumber">NI number.</param>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.op_Implicit(System.String)~Paytools.Common.Model.NiNumber">
            <summary>
            Operator for casting implicitly from a string to an instance of a <see cref="T:Paytools.Common.Model.NiNumber"/>.
            </summary>
            <param name="niNumber">NI number as string.</param>
            <exception cref="T:System.ArgumentException">Thrown if the supplied string is not a valid NI number.</exception>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.IsValid(System.String)">
            <summary>
            Verifies whether the supplied string could be a valid NI number.
            </summary>
            <param name="value">String value to check.</param>
            <returns>True if the supplied value could be a valid NI number; false otherwise.</returns>
            <remarks>Although this method confirms whether the string supplied <em>could</em> be a valid Ni nummber,
            it does not guarantee that the supplied value is registered with HMRC against a given individual.</remarks>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.ToString">
            <summary>
            Gets the string representation of this <see cref="T:Paytools.Common.Model.NiNumber"/>.
            </summary>
            <returns>String representation of this NI number in non-spaced format.</returns>
        </member>
        <member name="M:Paytools.Common.Model.NiNumber.ToString(System.Boolean)">
            <summary>
            Gets the string representation of this <see cref="T:Paytools.Common.Model.NiNumber"/>.
            </summary>
            <param name="asSpacedFormat">True if spaced format is to be returned (e.g., "NA 12 34 67 C";
            false otherwise.</param>
            <returns>String representation of this NI number in either spaced or non-spaced format.</returns>
        </member>
        <member name="T:Paytools.Common.Model.PayDate">
            <summary>
            Represents a specific pay date for a specific pay frequency.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.PayDate.Date">
            <summary>
            Gets the date of this <see cref="T:Paytools.Common.Model.PayDate"/>.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.PayDate.TaxYear">
            <summary>
            Gets the <see cref="P:Paytools.Common.Model.PayDate.TaxYear"/> for this <see cref="T:Paytools.Common.Model.PayDate"/>.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.PayDate.TaxPeriod">
            <summary>
            Gets the tax period for this <see cref="T:Paytools.Common.Model.PayDate"/>, for example, a pay date of 20th May for a monthly
            payroll would be tax period 2.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.PayDate.PayFrequency">
            <summary>
            Gets the pay frequency for this <see cref="T:Paytools.Common.Model.PayDate"/>.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.PayDate.#ctor(System.DateOnly,Paytools.Common.Model.PayFrequency)">
            <summary>
            Initialises a new <see cref="T:Paytools.Common.Model.PayDate"/> based on the supplied date and pay frequency.
            </summary>
            <param name="date">Pay date.</param>
            <param name="payFrequency">Pay frequency.</param>
        </member>
        <member name="M:Paytools.Common.Model.PayDate.#ctor(System.Int32,System.Int32,System.Int32,Paytools.Common.Model.PayFrequency)">
            <summary>
            Initialises a new <see cref="T:Paytools.Common.Model.PayDate"/> based on the supplied date and pay frequency.
            </summary>
            <param name="year">Year.</param>
            <param name="month">Month (1-12).</param>
            <param name="day">Day.</param>
            <param name="payFrequency">Pay frequency.</param>
        </member>
        <member name="M:Paytools.Common.Model.PayDate.op_Implicit(Paytools.Common.Model.PayDate)~System.DateTime">
            <summary>
            Gets the equivalent <see cref="T:System.DateTime"/> for this paydate, with the time portion set to midday (12:00:00) UTC.
            </summary>
            <param name="payDate"><see cref="T:Paytools.Common.Model.PayDate"/> to get the DateTime for.</param>
        </member>
        <member name="T:Paytools.Common.Model.PayFrequency">
            <summary>
            Enumerated value for payment frequency.
            </summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.Unspecified">
            <summary>Not specified</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.Weekly">
            <summary>Weekly</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.TwoWeekly">
            <summary>Every two weeks</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.FourWeekly">
            <summary>Every four weeks</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.Monthly">
            <summary>Monthly</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.Quarterly">
            <summary>Every three months</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.BiAnnually">
            <summary>Every six months</summary>
        </member>
        <member name="F:Paytools.Common.Model.PayFrequency.Annually">
            <summary>Once a year</summary>
        </member>
        <member name="T:Paytools.Common.Model.PayFrequencyExtensions">
            <summary>
            Extension methods for <see cref="T:Paytools.Common.Model.PayFrequency"/>.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.PayFrequencyExtensions.GetStandardTaxPeriodCount(Paytools.Common.Model.PayFrequency)">
            <summary>
            Provides access to the number of tax periods within a tax year for a given <see cref="T:Paytools.Common.Model.PayFrequency"/>.
            </summary>
            <param name="payFrequency">PayFrequency to provide period count for.</param>
            <returns>The number of tax periods within a tax year for a this PayFrequency, for example, PayFrequency.Monthly returns 12.</returns>
            <exception cref="T:System.ArgumentException">Thrown if an invalid PayFrequency value is supplied.</exception>
        </member>
        <member name="T:Paytools.Common.Model.PayrollId">
            <summary>
            Represents a payroll ID (also known as a "worker ID", "payroll number", "works number") as reported to HMRC.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.PayrollId.#ctor(System.String)">
            <summary>
            Initialises a new instance of <see cref="T:Paytools.Common.Model.PayrollId"/> with the supplied value.
            </summary>
            <param name="payrollId">Payroll ID value.</param>
        </member>
        <member name="M:Paytools.Common.Model.PayrollId.op_Implicit(Paytools.Common.Model.PayrollId)~System.String">
            <summary>
            Operator for casting implicitly from a <see cref="T:Paytools.Common.Model.PayrollId"/> instance to its string representation.
            </summary>
            <param name="payrollId">An instance of PayrollId.</param>
        </member>
        <member name="M:Paytools.Common.Model.PayrollId.op_Implicit(System.String)~Paytools.Common.Model.PayrollId">
            <summary>
            Operator for casting implicitly from a payroll ID string value to a <see cref="T:Paytools.Common.Model.PayrollId"/> instance.
            </summary>
            <param name="payrollId">String representation of payroll ID.</param>
        </member>
        <member name="M:Paytools.Common.Model.PayrollId.Parse(System.String)">
            <summary>
            Parses the supplied payroll ID.  TBA.
            </summary>
            <param name="value">Value to parse.</param>
            <returns>Parsed value.  TBA.</returns>
        </member>
        <member name="T:Paytools.Common.Model.TaxYear">
            <summary>
            Represents a given UK tax year, running from 6th April of a given year through to 5th April the following
            year.
            </summary>
            <remarks><see cref="T:Paytools.Common.Model.TaxYear"/> provides utility methods to access the relevant tax regimes (i.e., sub-countries
            within the UK) which have changed over the period 2018 to date.  TaxYear also provides conversions from dates
            to tax periods, based on payment frequency.</remarks>
        </member>
        <member name="P:Paytools.Common.Model.TaxYear.TaxYearEnding">
            <summary>
            Gets the <see cref="P:Paytools.Common.Model.TaxYear.TaxYearEnding"/> enumeration value for this <see cref="T:Paytools.Common.Model.TaxYear"/>.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.TaxYear.StartOfTaxYear">
            <summary>
            Gets the date of the start of this tax year.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.TaxYear.EndOfTaxYear">
            <summary>
            Gets the date of the end of this tax year.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.TaxYear.Current">
            <summary>
            Gets the <see cref="P:Paytools.Common.Model.TaxYear.TaxYearEnding"/> for the "current" tax year (based on today's date).
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.#ctor(Paytools.Common.Model.TaxYearEnding)">
            <summary>
            Initialises a new instance of <see cref="T:Paytools.Common.Model.TaxYear"/> based on the supplied <see cref="P:Paytools.Common.Model.TaxYear.TaxYearEnding"/> value.
            </summary>
            <param name="taxYearEnding">TaxYearEnding enum value for this tax year.</param>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.#ctor(System.DateOnly)">
            <summary>
            Initialises a new instance of <see cref="T:Paytools.Common.Model.TaxYear"/> based on the supplied date.
            </summary>
            <param name="taxDate">Date to create <see cref="T:Paytools.Common.Model.TaxYear"/> for.</param>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.GetCountriesForYear">
            <summary>
            Gets the list (as an array) of the country groupings that are applicable for a given tax year.
            </summary>
            <returns>Array of <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> values listing the tax regime groupings for this
            tax year.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if an invalid/unspecified tax year is provided.</exception>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.IsValidForYear(Paytools.Common.Model.CountriesForTaxPurposes)">
            <summary>
            Determines whether the supplied country groupings is valid for this tax year.
            </summary>
            <param name="countries">One or more <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> values.</param>
            <returns>True if the supplied countries parameter is valid for this tax year; false otherwise.</returns>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.GetTaxPeriod(System.DateOnly,Paytools.Common.Model.PayFrequency)">
            <summary>
            Gets the tax period for the supplied pay date and payment frequencey.  For example, if the pay frequency
            is monthly and the pay date is, say, 20th May, then the tax pariod is 2, as in "Month 2".
            </summary>
            <param name="payDate">Pay date to determine tax period for.</param>
            <param name="payFrequency">Payment frequency applicable.</param>
            <returns>Relevant tax period.</returns>
            <exception cref="T:System.ArgumentException">Thrown if the pay date falls outside this tax year.</exception>
        </member>
        <member name="M:Paytools.Common.Model.TaxYear.GetDefaultCountriesForYear">
            <summary>
            Gets the 'default' tax regime for this tax year as an <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> value.  This is the
            regime that all other tax treatments fall into if they are not in a specific regime, e.g., Scotland.
            </summary>
            <returns>Default tax regime for this tax year.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the tax year is invalid or has not been specified.</exception>
        </member>
        <member name="T:Paytools.Common.Model.TaxYearEnding">
            <summary>
            Enum representing a given tax year based on the last day of the tax year (i.e., 5 April 20xx).
            </summary>
            <remarks>This enumeration is updated each tax year to provide access to the forthcoming tax year.</remarks>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Unspecified">
            <summary>No tax year specified</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2019">
            <summary>2018-2019</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2020">
            <summary>2019-2020</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2021">
            <summary>2020-2021</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2022">
            <summary>2021-2022</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2023">
            <summary>2022-2023</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.Apr5_2024">
            <summary>2023-2024</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.MinValue">
            <summary>Minimum value supported for TaxYearEnding</summary>
        </member>
        <member name="F:Paytools.Common.Model.TaxYearEnding.MaxValue">
            <summary>Maximum value supported for TaxYearEnding</summary>
        </member>
        <member name="T:Paytools.Common.Model.TaxYearEndingExtensions">
            <summary>
            Extension methods for TaxYearEnding enum.
            </summary>
        </member>
        <member name="M:Paytools.Common.Model.TaxYearEndingExtensions.YearAsString(Paytools.Common.Model.TaxYearEnding)">
            <summary>
            Converts a TaxYearEnding enumerated value into a string.
            </summary>
            <param name="value">An instance of TaxYearEnding.</param>
            <returns>Year as string, e.g., "2020", indicating the year that the tax year ends in.</returns>
        </member>
        <member name="T:Paytools.Common.Model.Title">
            <summary>
            Represents an individual's title (e.g., Mr., Mrs).
            </summary>
            <remarks>Some ideas on standardisation sourced from
            <see href="https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/1112942/Titles__V12_.pdf"/>.<br/><br/>
            As per general Government guidance, no attempt is made to deduce a person's gender from their title.
            </remarks>
        </member>
        <member name="M:Paytools.Common.Model.Title.op_Implicit(Paytools.Common.Model.Title)~System.String">
            <summary>
            Implicit cast from Title to string.
            </summary>
            <param name="title">Title to obtain the string representation of.</param>
        </member>
        <member name="M:Paytools.Common.Model.Title.Parse(System.String)">
            <summary>
            Inspects the supplied title and returns a new <see cref="T:Paytools.Common.Model.Title"/> instance holding either the
            title supplied, or if it is a standard title (e.g., Mr, Mrs, Miss, etc.) then the standardised
            form of that title.
            </summary>
            <param name="title">Externally supplied string value for title.</param>
            <returns>Null if no title provided, a standardised title (e.g., "Mr") if a standardised title
            is provided, or the supplied string otherwise.</returns>
        </member>
        <member name="M:Paytools.Common.Model.Title.ToString">
            <summary>
            Gets the string representation of the Title.
            </summary>
            <returns>String representation of title, e.g., "Mr", "Ms".</returns>
        </member>
        <member name="T:Paytools.Common.Model.UkPostalAddress">
            <summary>
            Represents a UK postal address.
            </summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.AddressLine1">
            <summary>Gets or sets the first line of the address.</summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.AddressLine2">
            <summary>Gets or sets the second line of the address.</summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.AddressLine3">
            <summary>Gets or sets the third line of the address.</summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.AddressLine4">
            <summary>Gets or sets the fourth line of the address.</summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.Postcode">
            <summary>Gets or sets the postcode (UK addresses only).</summary>
        </member>
        <member name="P:Paytools.Common.Model.UkPostalAddress.ForeignCountry">
            <summary>Gets or sets the TBA.</summary>
        </member>
        <member name="T:Paytools.Common.Model.UkPostcode">
            <summary>
            Represents a UK Postcode.
            </summary>
        </member>
        <member name="T:Paytools.Common.Serialization.CountriesForTaxPurposesJsonConverter">
            <summary>
            JSON Converter for the <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> enumeration.  When encoded in a JSON payload,
            values are represented using space separated ISO-3166 format, e.g. "GB-ENG GB-NIR".
            </summary>
        </member>
        <member name="M:Paytools.Common.Serialization.CountriesForTaxPurposesJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads a <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> value in ISO-3166 format and converts to the appropriate enum
            value(s).
            </summary>
            <param name="reader">JSON reader (UTF-8 format).</param>
            <param name="typeToConvert">Type to convert (unused).</param>
            <param name="options">JSON serializer options (unused).</param>
            <returns><see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> value.</returns>
        </member>
        <member name="M:Paytools.Common.Serialization.CountriesForTaxPurposesJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Paytools.Common.Model.CountriesForTaxPurposes,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes a <see cref="T:Paytools.Common.Model.CountriesForTaxPurposes"/> enum value or values (as [Flags attribute is present), converted to the
            appropriate ISO-3166 space separated string format, e.g., "GB-ENG GB-WLS GB-NIR".
            </summary>
            <param name="writer">JSON writer (UTF-8 format).</param>
            <param name="value">Enum value(s) to convert.</param>
            <param name="options">JSON serializer options (unused).</param>
        </member>
        <member name="T:Paytools.Common.Serialization.DateOnlyJsonConverter">
            <summary>
            JSON Converter for instances of <see cref="T:System.DateOnly"/> types.
            </summary>
        </member>
        <member name="M:Paytools.Common.Serialization.DateOnlyJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads an ISO 8601 format date in string format and converts to the appropriate <see cref="T:System.DateOnly"/> value.
            </summary>
            <param name="reader">JSON reader (UTF-8 format).</param>
            <param name="typeToConvert">Type to convert (unused).</param>
            <param name="options">JSON serializer options (unused).</param>
            <returns><see cref="T:System.DateOnly"/> value.</returns>
        </member>
        <member name="M:Paytools.Common.Serialization.DateOnlyJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateOnly,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes a <see cref="T:System.DateOnly"/> value to the JSON stream in ISO 8601 format date in string format.
            </summary>
            <param name="writer">JSON writer (UTF-8 format).</param>
            <param name="value">DateOnly value to convert.</param>
            <param name="options">JSON serializer options (unused).</param>
        </member>
        <member name="T:Paytools.Common.Serialization.PayFrequencyJsonConverter">
            <summary>
            JSON Converter for the <see cref="T:Paytools.Common.Model.PayFrequency"/> enumeration.
            </summary>
        </member>
        <member name="M:Paytools.Common.Serialization.PayFrequencyJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads a <see cref="T:Paytools.Common.Model.PayFrequency"/> enumerated value in string format and converts to the appropriate enum
            value.
            </summary>
            <param name="reader">JSON reader (UTF-8 format).</param>
            <param name="typeToConvert">Type to convert (unused).</param>
            <param name="options">JSON serializer options (unused).</param>
            <returns><see cref="T:Paytools.Common.Model.PayFrequency"/> value.</returns>
        </member>
        <member name="M:Paytools.Common.Serialization.PayFrequencyJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Paytools.Common.Model.PayFrequency,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes a <see cref="T:Paytools.Common.Model.PayFrequency"/> enum value, converted to its string equivalent, to the JSON stream.
            </summary>
            <param name="writer">JSON writer (UTF-8 format).</param>
            <param name="value">Enum value to convert.</param>
            <param name="options">JSON serializer options (unused).</param>
        </member>
        <member name="T:Paytools.Common.Serialization.TaxYearEndingJsonConverter">
            <summary>
            JSON Converter for the <see cref="T:Paytools.Common.Model.TaxYearEnding"/> enumeration.
            </summary>
        </member>
        <member name="M:Paytools.Common.Serialization.TaxYearEndingJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Reads a <see cref="T:Paytools.Common.Model.TaxYearEnding"/> enumerated value in string format and converts to the appropriate enum
            value.
            </summary>
            <param name="reader">JSON reader (UTF-8 format).</param>
            <param name="typeToConvert">Type to convert (unused).</param>
            <param name="options">JSON serializer options (unused).</param>
            <returns><see cref="T:Paytools.Common.Model.TaxYearEnding"/> value.</returns>
        </member>
        <member name="M:Paytools.Common.Serialization.TaxYearEndingJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Paytools.Common.Model.TaxYearEnding,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Writes a <see cref="T:Paytools.Common.Model.TaxYearEnding"/> enum value, converted to its string equivalent, to the JSON stream.
            </summary>
            <param name="writer">JSON writer (UTF-8 format).</param>
            <param name="value">Enum value to convert.</param>
            <param name="options">JSON serializer options (unused).</param>
        </member>
    </members>
</doc>
